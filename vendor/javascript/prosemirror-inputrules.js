import{Plugin as e}from"prosemirror-state";import{findWrapping as t,canJoin as n}from"prosemirror-transform";class InputRule{constructor(e,t,n={}){this.match=e;this.match=e;this.handler=typeof t=="string"?stringHandler(t):t;this.undoable=n.undoable!==false}}function stringHandler(e){return function(t,n,r,l){let u=e;if(n[1]){let e=n[0].lastIndexOf(n[1]);u+=n[0].slice(e+n[1].length);r+=e;let t=r-l;if(t>0){u=n[0].slice(e-t,e)+u;r=l}}return t.tr.insertText(u,r,l)}}const r=500;function inputRules({rules:t}){let n=new e({state:{init(){return null},apply(e,t){let n=e.getMeta(this);return n||(e.selectionSet||e.docChanged?null:t)}},props:{handleTextInput(e,r,l,u){return run(e,r,l,u,t,n)},handleDOMEvents:{compositionend:e=>{setTimeout((()=>{let{$cursor:r}=e.state.selection;r&&run(e,r.pos,r.pos,"",t,n)}))}}},isInputRules:true});return n}function run(e,t,n,l,u,o){if(e.composing)return false;let s=e.state,i=s.doc.resolve(t);if(i.parent.type.spec.code)return false;let p=i.parent.textBetween(Math.max(0,i.parentOffset-r),i.parentOffset,null,"￼")+l;for(let r=0;r<u.length;r++){let i=u[r],c=i.match.exec(p);let a=c&&i.handler(s,c,t-(c[0].length-l.length),n);if(a){i.undoable&&a.setMeta(o,{transform:a,from:t,to:n,text:l});e.dispatch(a);return true}}return false}const undoInputRule=(e,t)=>{let n=e.plugins;for(let r=0;r<n.length;r++){let l,u=n[r];if(u.spec.isInputRules&&(l=u.getState(e))){if(t){let n=e.tr,r=l.transform;for(let e=r.steps.length-1;e>=0;e--)n.step(r.steps[e].invert(r.docs[e]));if(l.text){let t=n.doc.resolve(l.from).marks();n.replaceWith(l.from,l.to,e.schema.text(l.text,t))}else n.delete(l.from,l.to);t(n)}return true}}return false};const l=new InputRule(/--$/,"—");const u=new InputRule(/\.\.\.$/,"…");const o=new InputRule(/(?:^|[\s\{\[\(\<'"\u2018\u201C])(")$/,"“");const s=new InputRule(/"$/,"”");const i=new InputRule(/(?:^|[\s\{\[\(\<'"\u2018\u201C])(')$/,"‘");const p=new InputRule(/'$/,"’");const c=[o,s,i,p];function wrappingInputRule(e,r,l=null,u){return new InputRule(e,((e,o,s,i)=>{let p=l instanceof Function?l(o):l;let c=e.tr.delete(s,i);let a=c.doc.resolve(s),f=a.blockRange(),d=f&&t(f,r,p);if(!d)return null;c.wrap(f,d);let h=c.doc.resolve(s-1).nodeBefore;h&&h.type==r&&n(c.doc,s-1)&&(!u||u(o,h))&&c.join(s-1);return c}))}function textblockTypeInputRule(e,t,n=null){return new InputRule(e,((e,r,l,u)=>{let o=e.doc.resolve(l);let s=n instanceof Function?n(r):n;return o.node(-1).canReplaceWith(o.index(-1),o.indexAfter(-1),t)?e.tr.delete(l,u).setBlockType(l,l,t,s):null}))}export{InputRule,s as closeDoubleQuote,p as closeSingleQuote,u as ellipsis,l as emDash,inputRules,o as openDoubleQuote,i as openSingleQuote,c as smartQuotes,textblockTypeInputRule,undoInputRule,wrappingInputRule};

